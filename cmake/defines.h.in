// Copyright 2020-2021 Nikita Fediuchin. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#define __MPNW__

#define MPNW_VERSION_MAJOR @mpnw_VERSION_MAJOR@
#define MPNW_VERSION_MINOR @mpnw_VERSION_MINOR@
#define MPNW_VERSION_PATCH @mpnw_VERSION_PATCH@

#define MPNW_SUPPORT_OPENSSL @MPNW_SUPPORT_OPENSSL@
#define MPNW_LITTLE_ENDIAN @MPNW_LITTLE_ENDIAN@

typedef enum MpnwResult
{
	SUCCESS_MPNW_RESULT = 0,
	NETWORK_IS_NOT_INITIALIZED_MPNW_RESULT = 1,
	FAILED_TO_ALLOCATE_MPNW_RESULT = 2,
	FAILED_TO_CREATE_SOCKET_MPNW_RESULT = 3,
	FAILED_TO_BIND_SOCKET_MPNW_RESULT = 4,
	FAILED_TO_LISTEN_SOCKET_MPNW_RESULT = 5,
	FAILED_TO_ACCEPT_SOCKET_MPNW_RESULT = 6,
	FAILED_TO_CONNECT_SOCKET_MPNW_RESULT = 7,
	FAILED_TO_SET_SOCKET_FLAG_MPNW_RESULT = 8,
	FAILED_TO_GET_ADDRESS_INFO_MPNW_RESULT = 9,
	FAILED_TO_CREATE_SSL_MPNW_RESULT = 10,
	FAILED_TO_LOAD_CERTIFICATE_MPNW_RESULT = 11,
	NO_OPENSSL_SUPPORT_MPNW_RESULT = 12,
	MPNW_RESULT_COUNT = 13,
} MpnwResult;

static const char* const mpnwResultStrings[MPNW_RESULT_COUNT] = {
	"Success",
	"Network is not initialized",
	"Failed to allocate",
	"Failed to create socket",
	"Failed to bind socket",
	"Failed to listen socket",
	"Failed to accept socket",
	"Failed to connect socket",
	"Failed to set socket flag",
	"Failed to get address info",
	"Failed to create SSL",
	"Failed to load certificate",
};

inline static const char* mpnwResultToString(
	MpnwResult result)
{
	if (result < SUCCESS_MPNW_RESULT ||
		result >= MPNW_RESULT_COUNT)
	{
		return "Unknown pack result";
	}

	return mpnwResultStrings[result];
}
